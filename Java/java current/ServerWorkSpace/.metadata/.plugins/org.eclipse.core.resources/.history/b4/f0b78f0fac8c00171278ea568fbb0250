package com.springmongo.controller;


import java.util.Date;
import java.util.List;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Map;

import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.MatrixVariable;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.springmongo.collection.ItemCollection;
import com.springmongo.collection.UserCollection;
import com.springmongo.collection.UserLoginCollection;
import com.springmongo.entity.User;
import com.springmongo.entity.UserLogin;
import com.springmongo.service.ItemService;
import com.springmongo.service.UserService;

@RestController
@RequestMapping("")
public class MainController {
@Autowired
UserService userService;
@Autowired
ItemService itemService;

@Autowired
ActionService actionService;
//register
@RequestMapping(value="/register", method=RequestMethod.POST,
consumes=MediaType.APPLICATION_JSON_VALUE,
produces=MediaType.APPLICATION_JSON_VALUE)	
	 public @ResponseBody UserCollection registerUser(@RequestBody User user){
	System.out.println("Controller");
		return userService.createUser(user);	 
	 }	

//login
@RequestMapping(value="/login", method=RequestMethod.POST,
consumes=MediaType.APPLICATION_JSON_VALUE,
produces=MediaType.APPLICATION_JSON_VALUE)	
	 public @ResponseBody String  loginUser(@RequestBody UserLogin userLogin){
	System.out.println("Controller");
	JSONObject json = new JSONObject();
	UserLoginCollection userLoginCollection= userService.loginUser(userLogin);	
		if(userLoginCollection!=null){
			json.put("auth-token", userLoginCollection.getId());
			json.put("userName", userLoginCollection.getUserName());
			SimpleDateFormat dateFormat = new SimpleDateFormat();
			json.put("lastUpdateDate", dateFormat.format(new Date()) );	
			return json.toString();
		}else{
			json.put("message", "Wrong username or password");
			return json.toString();
		}	
	 }

	//logout
	@RequestMapping(value="/logout", method=RequestMethod.DELETE)
	 public @ResponseBody String  logoutUser(@RequestHeader(value="auth-token") String token){
		UserLoginCollection userSession = userService.logoutUser(token);
		JSONObject json = new JSONObject();
		if(userSession!=null){
			json.put("logout", "success");
			json.put("userName", userSession.getUserName());
			return json.toString();
		}else{
			json.put("logout", "failed");
			return json.toString();
		}		
	 }	
	//categories
	@RequestMapping(value="/categories", method=RequestMethod.GET,
			produces=MediaType.APPLICATION_JSON_VALUE)
	 public @ResponseBody String  getCategories(){
		System.out.println("Controller");
		ArrayList<ItemCollection> items = itemService.getAllCategories();
		JSONObject json = new JSONObject();

			if(items!=null){
				json.put("categories",items );
				return json.toString();
			}else{
				json.put("message", "No Categories");
			return json.toString();
			}	
		

	 }
	
	
	//actions
	@RequestMapping(value="/actions", method=RequestMethod.GET,
			produces=MediaType.APPLICATION_JSON_VALUE)
	 public @ResponseBody String  getActions(){
		System.out.println("Controller");
		ArrayList<ItemCollection> items = itemService.getAllCategories();
		JSONObject json = new JSONObject();

			if(items!=null){
				json.put("categories",items );
				return json.toString();
			}else{
				json.put("message", "No Categories");
			return json.toString();
			}	
		

	 }


}
