package com.springtest;

import java.util.ArrayList;

import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class TestAspect {

	public static void main(String[] args){
		//1.	Write a class StringOperations with few string related methods like getCapStr(), getLowerStr(), getLength() etc. Now call these methods using any main class. Inject an aspect that gives us report of exceptions thrown while string operation methods were invoked. The report should have information about method name & exception type.
		AbstractApplicationContext iocContainer = new ClassPathXmlApplicationContext("beans_aop.xml");	
//		StringOperations strop = (StringOperations) iocContainer.getBean("stringBean");
//		try {
//			System.out.println("To upper in main "+strop.getCapStr("Hello"));
//		} catch (Exception e1) {}
//		try {
//			System.out.println("To lower in main "+strop.getLowerStr("Hello"));
//		} catch (Exception e) {}
//		try {
//			System.out.println("Length in main "+strop.getLength("Hello"));
//		} catch (Exception e) {}
		
		//2.	Write a class having 2 methods addInVector() & addInList(). These methods add 1000 integers into vector & arraylist respectively. Write an aspect to measure the time required to perform both operations individually.
//		AddToVectorAndList addIt = (AddToVectorAndList) iocContainer.getBean("addtovectorandlistBean");
//		int[] x=new int[1000];
//		for(int i =0 ; i<1000 ; i++){
//			x[i] = i;
//		}
//		addIt.addInVector(x);
//		addIt.addInList(x);
//		addIt.addInVector(x);
//		addIt.addInList(x);
	}

}
