package com.springmongo.dao;



import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.orm.hibernate5.support.HibernateDaoSupport;
import org.springframework.transaction.annotation.Transactional;

import com.springmongo.collection.AdvertisementCollection;

import com.springmongo.collection.UserLoginCollection;
import com.springmongo.entity.Advertisement;

import com.springmongo.repository.AdvertisementRepository;

import com.springmongo.repository.UserLoginRepository;


public class AdvertisementDaoImplementation extends HibernateDaoSupport implements AdvertisementDao{


	@Transactional
	public Advertisement postAd(Advertisement advertisement, String token) {	
		boolean userSession =verifyToken(token);
		System.out.println("Found session, "+userSession);
		if(userSession==true){
			org.hibernate.Query uname = getHibernateTemplate().getSessionFactory().getCurrentSession().createQuery("select userId from UserLoginCollection where id=:authToken ");
			uname.setParameter("authToken", token);
			String userName = (String) uname.list().get(0);
			 getHibernateTemplate().save(advertisement);
//			AdvertisementCollection advertisementCollection = new AdvertisementCollection();
//			advertisementCollection.setName(advertisement.getName());
//			advertisementCollection.setTitle(advertisement.getTitle());
//			advertisementCollection.setDescription(advertisement.getDescription());
//			advertisementCollection.setCategoryl(advertisement.getCategory());
//			System.out.println(advertisementCollection);
//			advertisementRepository.save(advertisementCollection);
			return advertisement;
	
		}else{
			return null;
		}
	}

	public boolean verifyToken(String token){
		org.hibernate.Query q = getHibernateTemplate().getSessionFactory().getCurrentSession().createQuery("from UserLoginCollection where id=:authToken ");
		q.setParameter("authToken", token);
		
		if(q.list()!=null){
			return true;
		}else{
			return false;
		}
	}
	

}
